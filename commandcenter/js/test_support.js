/**
 * Copyright (c) 2007-2014, Kaazing Corporation. All rights reserved.
*/
function sizeof(a,b){function c(a,b){switch(b){case"boolean":g+=4,h++;break;case"number":g+=8,i++;break;case"string":u=a.length,g+=2*u,j++,k+=u;break;case"function":p++;break;case"null":case"undefined":break;default:alert("Found unknown item "+a+" of type "+b)}}function d(a){return a===window||a===navigator||a===localStorage}function e(a,b){"array"!==b&&"object"!==b?c(a,b):d(a)?CC.console.log("Ignoring system object"):f.indexOf(a)>=0?CC.console.log("Ignoring already-seen object"):(CC.console.log("pushing item of type ["+b+"]"),f.push(a))}var f,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r,s,t,u,v,w;f=b?b:[],f.push(a);for(var x=f.indexOf(a);x<f.length;x++){x%100==0&&CC.console.log("checking obj #"+x);var r=f[x],y=typeOf(r);if("array"===y){l++;for(var z=0;z<r.length;z++)e(r[z],typeOf(r[z]))}else if("object"!==y)c(r,y);else{m++;for(t in r){g+=2*t.length,n++,o+=t.length,CC.console.log("Found object key ["+t+"]");try{e(r[t],typeOf(r[t]))}catch(A){q++}}}}return[g,h,i,j,k,l,m,n,o,p,q]}function countClusterSize(a){var b=[a],c=a.getGateways()[0];b.push(c);for(var d=null,e=c.getServices(),f=0;f<e.length;f++){var g=e[f];"performance proxy"==g.get("serviceLabel")&&(d=g),b.push(g)}var h=d.get("serviceProcessingDataModels").item(0),i=sizeof(h,b);return alert("The first service processing data model in service ["+d.get("serviceLabel")+" takes up approximately:\n"+i[0]+" bytes overall\n"+i[1]+" booleans\n"+i[2]+" numbers\n"+i[3]+" strings ("+i[4]+" chars)\n"+i[5]+" arrays\n"+i[6]+" objects ("+i[7]+" keys taking "+i[8]+" chars)\n"+i[9]+" functions\n"+i[10]+" unreadable object properties"),b}function countSpdmSize(a){var b=countModelObjects(a),c=b.sessionProcessingDataModels,d=[]}function countModelObjects(a){function b(a){if(y("clusterModels",a)){var b=a.get("gatewayModels");b&&b.values().forEach(function(a){c(a)}),b=a.get("inProcessGatewayModels"),b.forEach(function(a){c(a)})}}function c(a){if(y("gatewayModels",a)){d(a.get("gatewayConfig"));for(var b=a.get("gatewayProcessingDataModels"),c=0;c<b.size();c++)l(b.item(c));var e=a.get("systemModel");e&&m(e);var f=a.get("cpuListModel");f&&o(f);var g=a.get("nicListModel");g&&q(g);var h=a.get("jmvModel");h&&processJmvModel(h);var i=a.getServices();i&&i.forEach(function(a){u(a)})}}function d(a){if(y("gatewayConfigModels",a)){var b=a.get("clusterConfig");b&&e(b);var c=a.get("licenseConfig");c&&f(c);var d=a.get("networkConfig");d&&g(d);var i=a.get("securityConfig");i&&h(i);var l=a.get("serviceDefaultsConfig");l&&j(l);var m=a.get("serviceConfigs");m&&m.forEach(function(a){k(a)})}}function e(a){y("clusterConfigModels",a)}function f(a){y("licenseConfigModels",a)}function g(a){y("networkConfigModels",a)}function h(a){if(y("securityConfigModels",a)){var b=a.get("realmConfigs");if(b)for(var c in b)i(b[c])}}function i(a){y("realmConfigModels",a)}function j(a){y("serviceDefaultsConfigModels",a)}function k(a){y("serviceConfigModels",a)}function l(a){y("gatewayProcessingDataModels",a)}function m(a){if(y("systemModels",a)){var b=a.get("summaryData");b.forEach(function(a){n(a)})}}function n(a){z.systemSummaryDataItems.push(a)}function o(a){if(y("cpuListModels",a)){var b=a.get("summaryData");b.forEach(function(a){p(a)})}}function p(a){z.cpuListSummaryDataItems.push(a)}function q(a){if(y("nicListModels",a)){var b=a.get("summaryData");b.forEach(function(a){r(a)})}}function r(a){z.nicListSummaryDataItems.push(a)}function s(a){if(y("jvmModels",a)){var b=a.get("summaryData");b.forEach(function(a){t(a)})}}function t(a){z.jvmSummaryDataItems.push(a)}function u(a){if(y("serviceModels",a)){for(var b=a.get("serviceProcessingDataModels"),c=0;c<b.size();c++)v(b.item(c));var d=a.getSessions();d&&d.forEach(function(a){w(a)})}}function v(a){z.serviceProcessingDataModels.push(a)}function w(a){if(y("sessionModels",a))for(var b=a.get("sessionProcessingDataModels"),c=0;c<b.size();c++)x(b.item(c))}function x(a){z.sessionProcessingDataModels.push(a)}function y(a,b){var c=z[a];return c.indexOf(b)<0?(c.push(b),!0):!1}var z={clusterModels:[],clusterConfigModels:[],cpuListModels:[],cpuListSummaryDataItems:[],gatewayModels:[],gatewayConfigModels:[],gatewayProcessingDataModels:[],jvmModels:[],jvmSummaryDataItems:[],licenseConfigModels:[],networkConfigModels:[],nicListModels:[],nicListSummaryDataItems:[],realmConfigModels:[],securityConfigModels:[],serviceConfigModels:[],serviceDefaultsConfigModels:[],serviceModels:[],serviceProcessingDataModels:[],sessionModels:[],sessionProcessingDataModels:[],systemModels:[],systemSummaryDataItems:[]};b(a);var A="Counts of the various types of model objects in the cluster tree:\n";for(var B in z)A+=B+": "+z[B].length+"\n";return alert(A),z}function countBytesRead(a){var b=a.getGateways(),c="Read since connection:\n";if(b)for(var d=0;d<b.length;d++){var e=b[d],f=e.get("mngtApi"),g=f._impl._snmp._bytesRead,h=f._impl._snmp._fragmentsRead;c+=e.get("gatewayLabel")+": "+h+" fragments, "+g+" bytes\n"}else c+="  No gateways are connected";alert(c)}var TEST_ENABLED=!0;